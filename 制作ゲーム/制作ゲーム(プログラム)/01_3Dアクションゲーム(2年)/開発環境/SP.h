////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// 必殺技処理 [SP.h]
// Author : Ryota Kinoshita
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef _SP_H_
#define _SP_H_

#include "main.h"
//******************************************************************************************************************************
// マクロ定義
//******************************************************************************************************************************
#define MAX_SP	(3)

//******************************************************************************************************************************
// 構造体定義
//******************************************************************************************************************************
typedef enum
{
	SPTEX_BG =0,
	SPTEX_MAX
}SPTEX;

typedef struct
{
	LPDIRECT3DTEXTURE9	pTexture;	// テクスチャへのポインタ
	char	*pFileName;				// テクスチャへのポインタ
}SpData;

typedef struct
{
	D3DXVECTOR3 pos;					// 位置
	D3DXVECTOR3 rot;					// 向き
	float fWidth;						// 幅
	float fHeight;						// 高さ
	int nPatternAnim;					// パターん
	int nCounterAnim;					// カウンター
	int nIdy;							// プレイヤーの番号
	int nNumber;						// 個数ナンバー
	bool bUse;							// 使用されているかどうか
}Sp;

typedef struct
{
	Sp aSP[MAX_SP];
}SETSP;

//******************************************************************************************************************************
// プロトタイプ宣言
//******************************************************************************************************************************
void InitSp(void);
void UninitSp(void);
void UpdateSp(void);
void DrawSp(void);
void SetSp(D3DXVECTOR3 pos, D3DXVECTOR3 rot, float fWidth, float fHeight, int nIdy, int nNumber);
Sp *GetSp(void);
SpData *GetSpData(void);
void SetPlayerSp(int nSp, int nIdy);
void GetPlayerSp(int nSp, int nIdy);
void DeleteSp(int nIdy);
#endif
