//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//
// カーソル処理 [cursor.h]
// Author : suzuki
//
//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#ifndef _CURSOR_H_
#define _CURSOR_H_

#include "main.h"
#include "player.h"

//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// マクロ定義
//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#define CURSOR_WIDTH	(40)	// 幅
#define CURSOR_HEIGHT	(40)	// 高さ
#define CURSOR_MAX		(4)		// 最大数

//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// 列挙体の定義
//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
typedef enum
{// カーソルの状態
	CURSORSTATE_CATCH = 0,
	CURSORSTATE_RELEASE_START,
	CURSORSTATE_RELEASE,
	CURSORSTATE_MAX
}CURSORSTATE;

//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// 構造体の定義
//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
typedef struct
{// カーソル
	D3DXVECTOR3 pos;						// 現在の位置
	D3DXVECTOR3 posOld;						// 前回の位置
	D3DXVECTOR3 move;						// 移動量
	float		fWidth;						// 幅
	float		fHeight;					// 高さ
	int			nPatternAnim;				// アニメーションパターンNo.
	int			nNowChar;					// 選択されているキャラクターの番号
	int			nCounter;					// カウンター
	CURSORSTATE	state;						// 状態
	CURSORSTATE	stateOld;					// 状態
	bool		bColor;	// 色が普通のか違うのか(カラー分)
	int			colorType;					// 色の種類
}CURSOR;

//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// プロトタイプ宣言
//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
void InitCursor(void);
void UninitCursor(void);
void UpdateCursor(void);
void DrawCursor(void);
CURSOR *GetCursors(void);
void SetOperation(int nIndex);	// カーソル操作
#endif